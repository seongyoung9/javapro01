main> [2017-11-22 14:39:30] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 14:39:30 KST 2017]; root of context hierarchy 
main> [2017-11-22 14:39:30] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [calsspath:ApplicationContext.xml] 
main> [2017-11-22 14:39:50] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 14:39:50 KST 2017]; root of context hierarchy 
main> [2017-11-22 14:39:50] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [calsspath:ApplicationContext.xml] 
main> [2017-11-22 14:41:29] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 14:41:29 KST 2017]; root of context hierarchy 
main> [2017-11-22 14:41:30] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [calsspath:ApplicationContext.xml] 
main> [2017-11-22 14:43:21] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 14:43:21 KST 2017]; root of context hierarchy 
main> [2017-11-22 14:43:21] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [calsspath:ApplicationContext.xml] 
main> [2017-11-22 14:48:39] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 14:48:39 KST 2017]; root of context hierarchy 
main> [2017-11-22 14:48:40] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [calsspath:ApplicationContext.xml] 
main> [2017-11-22 15:05:54] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 15:05:54 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:05:54] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [calsspath:ApplicationContext.xml] 
main> [2017-11-22 15:06:58] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 15:06:58 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:06:58] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [calsspath:ApplicationContext.xml] 
main> [2017-11-22 15:10:56] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 15:10:56 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:10:56] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:10:56] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:10:56] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:10:57] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:10:57] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:10:57] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:10:57] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:10:57] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:10:57] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:10:57] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@384fc774] 
main> [2017-11-22 15:10:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:10:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:10:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 15:10:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:10:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:10:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:10:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:10:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:10:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:10:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:10:57] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:10:57] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:10:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:10:57] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:10:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:10:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:11:18] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:11:18] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64a1923a] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:11:18] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@64a1923a] 
main> [2017-11-22 15:17:12] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 15:17:12 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:17:12] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:17:12] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:17:13] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:17:13] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:17:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:17:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:17:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:17:13] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:17:13] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:17:13] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@37d80fe7] 
main> [2017-11-22 15:17:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:17:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 15:17:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 15:17:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:17:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:17:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:17:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:17:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:17:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:17:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:17:13] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:17:13] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:17:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:17:13] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:17:13] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:17:13] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:17:24] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:17:24] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f460bb] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:17:24] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f460bb] 
main> [2017-11-22 15:18:54] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 15:18:54 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:18:54] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:18:54] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:18:55] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:18:55] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:18:55] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:18:55] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:18:55] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:18:55] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:18:55] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:18:55] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@37d80fe7] 
main> [2017-11-22 15:18:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:18:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 15:18:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 15:18:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:18:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:18:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:18:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:18:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:18:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:18:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:18:55] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:18:55] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:18:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:18:55] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:18:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:18:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:18:58] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:18:58] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f460bb] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:18:58] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f460bb] 
main> [2017-11-22 15:20:44] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 15:20:44 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:20:44] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:20:45] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:20:45] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:20:45] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:20:45] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:20:45] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:20:45] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:20:45] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:20:45] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:20:45] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@37d80fe7] 
main> [2017-11-22 15:20:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:20:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 15:20:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:20:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:20:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 15:20:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:20:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:20:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:20:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:20:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:20:45] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:20:45] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:20:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:20:45] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:20:45] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:20:45] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:20:48] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:20:48] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f460bb] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:20:48] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f460bb] 
main> [2017-11-22 15:24:01] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 15:24:01 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:24:01] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:24:01] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:24:02] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:24:02] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:24:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:24:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:24:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:24:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:24:02] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:24:02] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@37d80fe7] 
main> [2017-11-22 15:24:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:24:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 15:24:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:24:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:24:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:24:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:24:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 15:24:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:24:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:24:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:24:02] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:24:02] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:24:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:24:02] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:24:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:24:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:24:38] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:24:38] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f460bb] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:24:38] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f460bb] 
main> [2017-11-22 15:26:37] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 15:26:37 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:26:37] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:26:38] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:26:38] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:26:38] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:26:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:26:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:26:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:26:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:26:38] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:26:38] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@37d80fe7] 
main> [2017-11-22 15:26:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:26:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 15:26:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:26:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:26:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:26:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:26:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:26:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:26:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:26:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 15:26:38] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:26:38] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:26:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:26:38] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:26:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:26:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:26:49] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:26:49] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f460bb] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:26:49] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f460bb] 
main> [2017-11-22 15:30:27] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 15:30:27 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:30:27] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:30:27] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:30:28] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:30:28] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:30:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:30:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:30:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:30:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:30:28] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:30:28] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@37d80fe7] 
main> [2017-11-22 15:30:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:30:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:30:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:30:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:30:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:30:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 15:30:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:30:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:30:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:30:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 15:30:28] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:30:28] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:30:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:30:28] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:30:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:30:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:30:59] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:31:00] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f460bb] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:31:00] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f460bb] 
main> [2017-11-22 15:34:58] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 15:34:58 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:34:58] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:34:58] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:35:00] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:35:00] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:35:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:35:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:35:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:35:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:35:00] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:35:00] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@37d80fe7] 
main> [2017-11-22 15:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 15:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 15:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:35:00] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:35:00] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:35:00] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:35:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:35:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:35:10] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:35:10] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f460bb] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:35:10] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f460bb] 
main> [2017-11-22 15:36:24] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 15:36:24 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:36:25] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:36:25] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:36:25] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:36:25] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:36:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:36:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:36:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:36:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:36:25] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:36:25] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@37d80fe7] 
main> [2017-11-22 15:36:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:36:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 15:36:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:36:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:36:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 15:36:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:36:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:36:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:36:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:36:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:36:25] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:36:25] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:36:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:36:25] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:36:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:36:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:36:37] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:36:37] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f460bb] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:36:37] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f460bb] 
main> [2017-11-22 15:38:18] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@66048bfd: startup date [Wed Nov 22 15:38:18 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:38:18] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:38:19] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:38:19] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:38:19] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:38:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:38:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:38:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:38:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:38:19] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:38:19] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@47caedad] 
main> [2017-11-22 15:38:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:38:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 15:38:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 15:38:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:38:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:38:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:38:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:38:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:38:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:38:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:38:19] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:38:19] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:38:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:38:19] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:38:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:38:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:38:19] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:38:19] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51c693d] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:38:19] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@51c693d] 
main> [2017-11-22 15:38:56] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 15:38:56 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:38:57] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:38:57] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:38:57] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:38:57] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:38:57] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:38:57] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:38:57] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:38:57] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:38:57] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:38:57] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@37d80fe7] 
main> [2017-11-22 15:38:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:38:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 15:38:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:38:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:38:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:38:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 15:38:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:38:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:38:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:38:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:38:57] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:38:57] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:38:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:38:57] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:38:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:38:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:38:58] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:38:58] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f460bb] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:38:58] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f460bb] 
main> [2017-11-22 15:41:27] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 15:41:27 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:41:27] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:41:27] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:41:28] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:41:28] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:41:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:41:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:41:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:41:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:41:28] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:41:28] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@37d80fe7] 
main> [2017-11-22 15:41:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:41:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:41:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:41:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:41:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 15:41:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:41:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:41:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:41:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 15:41:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:41:28] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:41:28] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:41:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:41:28] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:41:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:41:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:41:31] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:41:31] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f460bb] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:41:31] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f460bb] 
main> [2017-11-22 15:43:32] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 15:43:32 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:43:32] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:43:33] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:43:33] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:43:33] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:43:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:43:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:43:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:43:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:43:33] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:43:33] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@37d80fe7] 
main> [2017-11-22 15:43:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:43:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 15:43:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:43:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 15:43:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:43:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:43:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:43:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:43:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:43:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:43:33] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:43:33] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:43:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:43:33] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:43:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:43:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:43:35] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:43:35] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f460bb] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:43:35] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@17f460bb] 
main> [2017-11-22 15:53:35] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 15:53:35 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:53:35] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:53:36] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:53:36] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 15:53:36] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 15:53:36] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 15:53:36] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 15:53:36] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 15:53:36] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 15:53:36] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 15:53:36] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 15:53:36] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 15:53:36] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 15:53:36] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 15:53:36] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 15:53:36] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 15:53:36] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:53:36] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:53:36] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 15:53:36] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 15:53:36] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 15:53:36] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 15:53:36] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:53:36] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:53:36] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:53:36] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:53:36] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:53:36] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:53:36] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@7a9c84a5] 
main> [2017-11-22 15:53:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:53:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 15:53:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:53:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 15:53:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:53:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:53:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:53:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:53:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:53:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:53:36] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:53:36] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:53:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:53:36] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:53:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:53:36] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:53:36] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:53:36] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74fef3f7] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:53:36] [DataSourceUtils] [110] [DEBUG] Fetching JDBC Connection from DataSource 
main> [2017-11-22 15:53:37] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [832066800, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring 
main> [2017-11-22 15:53:37] [getCount] [139] [DEBUG] ==>  Preparing: select count(*) as total from book where 1 = 1  
main> [2017-11-22 15:53:37] [getCount] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 15:53:37] [getCount] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 15:53:37] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74fef3f7] 
main> [2017-11-22 15:53:37] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 15:58:01] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 15:58:01 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:58:01] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:58:02] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:58:02] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 15:58:02] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 15:58:02] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 15:58:02] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 15:58:02] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 15:58:02] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 15:58:02] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 15:58:02] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 15:58:02] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 15:58:02] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 15:58:02] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 15:58:02] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 15:58:02] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 15:58:02] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:58:02] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:58:02] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 15:58:02] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 15:58:02] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 15:58:02] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 15:58:02] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:58:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:58:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:58:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:58:02] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:58:02] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:58:02] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@7a9c84a5] 
main> [2017-11-22 15:58:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:58:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 15:58:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:58:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:58:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:58:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:58:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 15:58:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:58:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:58:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:58:02] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:58:02] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:58:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:58:02] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:58:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:58:02] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:58:08] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:58:08] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74fef3f7] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:58:08] [DataSourceUtils] [110] [DEBUG] Fetching JDBC Connection from DataSource 
main> [2017-11-22 15:58:08] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [832066800, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring 
main> [2017-11-22 15:58:09] [getCount] [139] [DEBUG] ==>  Preparing: select count(*) as total from book where 1 = 1  
main> [2017-11-22 15:58:09] [getCount] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 15:58:09] [getCount] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 15:58:09] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@74fef3f7] 
main> [2017-11-22 15:58:09] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:00:58] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 16:00:58 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:00:58] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:00:58] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:00:58] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:00:58] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:00:58] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:00:58] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:00:58] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:00:58] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:00:58] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:00:58] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 16:00:58] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:00:58] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:00:58] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:00:58] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:00:58] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 16:00:58] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:00:58] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:00:58] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:00:58] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 16:00:58] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:00:59] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:00:59] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:00:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:00:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:00:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:00:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:00:59] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:00:59] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@7a9c84a5] 
main> [2017-11-22 16:00:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:00:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:00:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:00:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:00:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:00:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:00:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:00:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 16:00:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:00:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:00:59] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:00:59] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:00:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:00:59] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:00:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:00:59] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:00:59] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:00:59] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:00:59] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:00:59] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:00:59] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:00:59] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:00:59] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:00:59] [selectAll] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1  
main> [2017-11-22 16:00:59] [selectAll] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:00:59] [selectAll] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 16:00:59] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:00:59] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:00:59] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:00:59] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:00:59] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:00:59] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:00:59] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:00:59] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:00:59] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:04:54] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 16:04:54 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:04:54] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:04:54] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:04:54] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:04:54] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:04:54] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:04:54] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:04:54] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:04:54] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:04:54] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:04:54] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 16:04:54] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:04:54] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:04:54] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:04:54] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:04:54] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 16:04:54] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:04:54] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:04:54] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:04:54] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 16:04:54] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:04:55] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:04:55] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:04:55] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:04:55] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:04:55] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:04:55] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:04:55] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:04:55] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@7a9c84a5] 
main> [2017-11-22 16:04:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:04:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 16:04:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:04:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:04:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:04:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:04:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:04:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:04:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:04:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:04:55] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:04:55] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:04:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:04:55] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:04:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:04:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:04:55] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:04:55] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:04:55] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:04:55] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:04:55] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:04:55] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:04:55] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:04:55] [selectAll] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1  
main> [2017-11-22 16:04:55] [selectAll] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:04:55] [selectAll] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 16:04:55] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:04:55] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:04:55] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:04:55] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:04:55] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:04:55] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:04:55] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:04:55] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:04:55] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:13:19] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 16:13:19 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:13:19] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:13:20] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:13:20] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:13:20] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:13:20] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:13:20] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:13:20] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:13:20] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:13:20] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:13:20] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 16:13:20] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:13:20] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:13:20] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:13:20] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:13:20] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 16:13:20] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:13:20] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:13:20] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:13:20] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 16:13:20] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:13:20] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:13:20] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:13:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:13:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:13:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:13:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:13:20] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:13:20] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@7a9c84a5] 
main> [2017-11-22 16:13:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:13:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 16:13:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:13:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:13:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:13:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:13:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:13:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:13:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:13:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:13:20] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:13:20] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:13:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:13:20] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:13:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:13:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:13:20] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:13:21] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:13:21] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:13:21] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:13:21] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:13:21] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af78c87] 
main> [2017-11-22 16:13:21] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:13:21] [selectAll] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1  
main> [2017-11-22 16:13:21] [selectAll] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:13:21] [selectAll] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 16:13:21] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af78c87] 
main> [2017-11-22 16:13:21] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af78c87] 
main> [2017-11-22 16:13:21] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af78c87] 
main> [2017-11-22 16:13:21] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af78c87] 
main> [2017-11-22 16:13:21] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:13:21] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:13:21] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:13:21] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:13:21] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:13:38] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 16:13:38 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:13:38] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:13:38] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:13:38] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:13:38] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:13:38] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:13:38] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:13:38] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:13:38] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:13:38] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:13:38] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 16:13:38] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:13:38] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:13:38] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:13:38] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:13:38] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 16:13:38] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:13:38] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:13:38] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:13:38] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 16:13:38] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:13:38] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:13:38] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:13:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:13:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:13:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:13:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:13:38] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:13:38] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@7a9c84a5] 
main> [2017-11-22 16:13:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:13:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:13:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:13:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:13:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:13:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:13:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:13:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 16:13:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:13:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:13:38] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:13:38] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:13:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:13:38] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:13:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:13:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:13:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:13:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:13:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:13:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:13:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:13:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:13:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:13:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:13:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:13:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:13:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:13:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:13:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:13:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:13:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:13:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:13:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:13:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:13:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:13:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:13:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:13:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:13:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:13:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:13:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:13:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:13:39] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:13:39] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:13:39] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:13:39] [selectAll] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1  
main> [2017-11-22 16:13:39] [selectAll] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:13:39] [selectAll] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 16:13:39] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:13:39] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:13:39] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:13:39] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:13:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:13:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:13:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:13:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:13:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:34:18] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 16:34:18 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:34:18] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:34:19] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:34:19] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:34:19] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:34:19] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:34:19] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:34:19] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:34:19] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:34:19] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:34:19] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 16:34:19] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:34:19] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:34:19] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:34:19] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:34:19] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 16:34:19] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:34:19] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:34:19] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:34:19] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 16:34:19] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:34:19] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:34:19] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:34:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:34:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:34:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:34:19] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:34:19] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:34:19] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@7a9c84a5] 
main> [2017-11-22 16:34:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:34:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 16:34:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:34:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:34:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:34:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:34:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:34:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:34:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:34:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:34:19] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:34:19] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:34:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:34:19] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:34:19] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:34:19] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:34:19] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:34:19] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:34:19] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:34:19] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:34:19] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:34:19] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:34:19] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:34:19] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:34:19] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:34:19] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:34:19] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:34:19] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:34:19] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:34:19] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:34:19] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:35:28] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 16:35:28 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:35:28] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:35:28] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:35:29] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:35:29] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:35:29] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:35:29] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:35:29] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:35:29] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:35:29] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:35:29] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 16:35:29] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:35:29] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:35:29] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:35:29] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:35:29] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 16:35:29] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:35:29] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:35:29] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:35:29] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 16:35:29] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:35:29] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:35:29] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:35:29] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:35:29] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:35:29] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:35:29] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:35:29] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:35:29] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@7a9c84a5] 
main> [2017-11-22 16:35:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:35:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 16:35:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:35:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:35:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:35:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:35:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:35:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:35:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:35:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:35:29] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:35:29] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:35:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:35:29] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:35:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:35:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:35:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:35:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:35:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:35:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:35:29] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:35:29] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af78c87] 
main> [2017-11-22 16:35:29] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af78c87] 
main> [2017-11-22 16:35:29] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af78c87] 
main> [2017-11-22 16:35:29] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af78c87] 
main> [2017-11-22 16:35:29] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af78c87] 
main> [2017-11-22 16:35:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:35:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:35:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:35:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:35:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:35:39] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 16:35:39 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:35:39] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:35:39] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:35:40] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:35:40] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:35:40] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:35:40] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:35:40] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:35:40] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:35:40] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:35:40] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 16:35:40] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:35:40] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:35:40] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:35:40] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:35:40] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 16:35:40] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:35:40] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:35:40] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:35:40] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 16:35:40] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:35:40] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:35:40] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:35:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:35:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:35:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:35:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:35:40] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:35:40] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@7a9c84a5] 
main> [2017-11-22 16:35:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:35:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:35:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:35:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 16:35:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:35:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:35:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:35:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:35:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:35:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:35:40] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:35:40] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:35:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:35:40] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:35:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:35:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:35:40] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:35:40] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:35:40] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:35:40] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:35:40] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:35:40] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:35:40] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:35:40] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:35:40] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:35:40] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:35:40] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:35:40] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:35:40] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:35:40] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:35:40] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:36:53] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 16:36:53 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:36:53] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:36:53] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:36:53] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:36:53] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:36:53] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:36:53] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:36:53] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:36:53] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:36:53] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:36:54] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 16:36:54] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:36:54] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:36:54] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:36:54] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:36:54] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 16:36:54] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:36:54] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:36:54] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:36:54] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 16:36:54] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:36:54] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:36:54] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:36:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:36:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:36:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:36:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:36:54] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:36:54] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@7a9c84a5] 
main> [2017-11-22 16:36:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:36:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 16:36:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:36:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:36:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:36:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:36:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:36:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:36:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:36:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:36:54] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:36:54] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:36:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:36:54] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:36:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:36:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:36:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:36:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:36:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:36:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:36:54] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:36:54] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:36:54] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:36:54] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:36:54] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:36:54] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:36:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:36:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:36:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:36:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:36:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:37:08] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 16:37:08 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:37:08] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:37:09] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:37:09] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:37:09] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:37:09] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:37:09] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:37:09] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:37:09] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:37:09] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:37:09] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 16:37:09] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:37:09] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:37:09] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:37:09] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:37:09] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 16:37:09] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:37:09] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:37:09] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:37:09] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 16:37:09] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:37:09] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:37:09] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:37:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:37:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:37:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:37:09] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:37:09] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:37:09] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@7a9c84a5] 
main> [2017-11-22 16:37:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:37:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 16:37:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:37:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:37:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:37:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:37:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:37:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:37:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:37:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:37:09] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:37:09] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:37:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:37:09] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:37:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:37:09] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:37:09] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:37:09] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:37:09] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:37:09] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:37:09] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:37:09] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af78c87] 
main> [2017-11-22 16:37:10] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af78c87] 
main> [2017-11-22 16:37:10] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af78c87] 
main> [2017-11-22 16:37:10] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af78c87] 
main> [2017-11-22 16:37:10] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af78c87] 
main> [2017-11-22 16:37:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:37:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:37:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:37:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:37:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:38:51] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 16:38:51 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:38:51] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:38:51] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:38:52] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:38:52] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:38:52] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:38:52] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:38:52] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:38:52] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:38:52] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:38:52] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 16:38:52] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:38:52] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:38:52] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:38:52] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:38:52] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 16:38:52] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:38:52] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:38:52] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:38:52] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 16:38:52] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:38:52] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:38:52] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:38:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:38:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:38:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:38:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:38:52] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:38:52] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@7a9c84a5] 
main> [2017-11-22 16:38:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:38:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 16:38:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:38:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:38:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:38:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:38:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:38:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:38:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:38:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:38:52] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:38:52] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:38:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:38:52] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:38:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:38:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:38:52] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:38:52] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:38:52] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:38:52] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:38:52] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:38:52] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:38:52] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:38:52] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:38:52] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:38:52] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:38:52] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:38:52] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:38:52] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:38:52] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:38:52] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:39:13] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 16:39:13 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:39:13] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:39:14] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:39:14] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:39:14] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:39:14] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:39:14] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:39:14] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:39:14] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:39:14] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:39:14] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 16:39:14] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:39:14] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:39:14] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:39:14] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:39:14] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 16:39:14] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:39:14] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:39:14] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:39:14] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 16:39:14] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:39:14] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:39:14] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:39:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:39:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:39:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:39:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:39:14] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:39:14] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@7a9c84a5] 
main> [2017-11-22 16:39:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:39:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:39:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:39:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:39:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:39:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:39:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 16:39:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:39:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:39:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:39:14] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:39:14] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:39:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:39:14] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:39:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:39:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:39:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:39:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:39:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:39:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:39:14] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:39:14] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:39:14] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:39:14] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:39:14] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:39:14] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 16:39:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:39:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:39:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:39:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:39:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:42:16] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 16:42:16 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:42:16] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:42:16] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:42:16] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:42:16] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:42:16] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:42:16] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:42:16] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:42:16] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:42:16] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:42:16] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 16:42:16] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:42:16] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:42:16] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:42:16] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:42:16] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 16:42:16] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:42:16] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:42:16] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:42:17] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 16:42:17] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:42:17] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:42:17] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:42:17] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:42:17] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:42:17] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:42:17] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:42:17] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:42:17] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@7a9c84a5] 
main> [2017-11-22 16:42:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:42:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:42:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:42:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:42:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:42:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:42:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 16:42:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:42:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:42:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:42:17] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:42:17] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:42:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:42:17] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:42:17] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:42:17] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:42:17] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:42:17] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1455064947, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:42:17] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:42:17] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:42:17] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:42:17] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@226b143b] 
main> [2017-11-22 16:42:17] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:42:17] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ?  
main> [2017-11-22 16:42:17] [selectLike] [139] [DEBUG] ==> Parameters: %op%(String) 
main> [2017-11-22 16:42:17] [selectLike] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 16:42:17] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@226b143b] 
main> [2017-11-22 16:42:17] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@226b143b] 
main> [2017-11-22 16:42:17] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@226b143b] 
main> [2017-11-22 16:42:17] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@226b143b] 
main> [2017-11-22 16:42:17] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:42:17] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1455064947, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:42:17] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:42:17] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:42:17] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:42:29] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 16:42:29 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:42:29] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:42:29] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:42:30] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:42:30] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:42:30] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:42:30] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:42:30] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:42:30] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:42:30] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:42:30] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 16:42:30] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:42:30] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:42:30] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:42:30] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:42:30] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 16:42:30] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:42:30] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:42:30] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:42:30] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 16:42:30] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:42:30] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:42:30] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:42:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:42:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:42:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:42:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:42:30] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:42:30] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@7a9c84a5] 
main> [2017-11-22 16:42:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:42:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 16:42:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:42:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:42:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:42:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:42:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:42:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:42:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:42:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:42:30] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:42:30] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:42:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:42:30] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:42:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:42:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:42:30] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:42:30] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [663215704, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:42:30] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [663215704, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:42:30] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [663215704, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:42:31] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:42:31] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4158debd] 
main> [2017-11-22 16:42:31] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [663215704, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:42:31] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ?  
main> [2017-11-22 16:42:31] [selectLike] [139] [DEBUG] ==> Parameters: %op%(String) 
main> [2017-11-22 16:42:31] [selectLike] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 16:42:31] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4158debd] 
main> [2017-11-22 16:42:31] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4158debd] 
main> [2017-11-22 16:42:31] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4158debd] 
main> [2017-11-22 16:42:31] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4158debd] 
main> [2017-11-22 16:42:31] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:42:31] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [663215704, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:42:31] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [663215704, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:42:31] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [663215704, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:42:31] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:47:39] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 16:47:39 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:47:39] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:47:39] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:47:39] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:47:39] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:47:39] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:47:39] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:47:39] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:47:39] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:47:39] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:47:39] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 16:47:39] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:47:39] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:47:39] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:47:39] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:47:39] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 16:47:39] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:47:39] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:47:39] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:47:39] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 16:47:39] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:47:39] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:47:39] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:47:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:47:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:47:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:47:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:47:39] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:47:39] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@7a9c84a5] 
main> [2017-11-22 16:47:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:47:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 16:47:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:47:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:47:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:47:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:47:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:47:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:47:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:47:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:47:40] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:47:40] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:47:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:47:40] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:47:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:47:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:47:40] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectEqual]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:47:40] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1455064947, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:47:40] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:47:40] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:47:40] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:47:40] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@226b143b] 
main> [2017-11-22 16:47:40] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:47:40] [selectEqual] [139] [DEBUG] ==>  Preparing: select * from book where 1=1 and bookname = ? and booid = ?  
main> [2017-11-22 16:47:40] [selectEqual] [139] [DEBUG] ==> Parameters: mysql(String), 2(Integer) 
main> [2017-11-22 16:47:40] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@226b143b] 
main> [2017-11-22 16:47:40] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml] 
main> [2017-11-22 16:47:40] [SQLErrorCodesFactory] [126] [INFO] SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana] 
main> [2017-11-22 16:47:40] [SQLErrorCodesFactory] [199] [DEBUG] Looking up default SQLErrorCodes for DataSource [org.apache.commons.dbcp2.BasicDataSource@4d0b0fd4] 
main> [2017-11-22 16:47:40] [SQLErrorCodesFactory] [217] [DEBUG] Database product name cached for DataSource [org.apache.commons.dbcp2.BasicDataSource@4d0b0fd4]: name is 'MySQL' 
main> [2017-11-22 16:47:40] [SQLErrorCodesFactory] [175] [DEBUG] SQL error codes for 'MySQL' found 
main> [2017-11-22 16:47:40] [SQLErrorCodeSQLExceptionTranslator] [397] [DEBUG] Translating SQLException with SQL state '42S22', error code '1054', message [Unknown column 'booid' in 'where clause']; SQL was [] for task [
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'booid' in 'where clause'
### The error may exist in mapper/mapperBook.xml
### The error may involve mapper.mapperBook.selectEqual-Inline
### The error occurred while setting parameters
### SQL: select *   from book   where 1=1        and bookname = ?            and booid = ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'booid' in 'where clause'
] 
main> [2017-11-22 16:47:40] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@226b143b] 
main> [2017-11-22 16:47:40] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@226b143b] 
main> [2017-11-22 16:47:40] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@226b143b] 
main> [2017-11-22 16:47:40] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:47:40] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1455064947, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:47:40] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:47:40] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:47:40] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:48:41] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 16:48:41 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:48:41] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:48:41] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:48:41] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:48:41] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:48:41] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:48:41] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:48:41] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:48:41] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:48:41] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:48:41] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 16:48:41] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:48:41] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:48:41] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:48:41] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:48:41] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 16:48:41] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:48:41] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:48:41] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:48:41] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 16:48:41] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:48:41] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:48:41] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:48:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:48:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:48:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:48:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:48:41] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:48:41] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@7a9c84a5] 
main> [2017-11-22 16:48:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:48:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 16:48:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:48:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:48:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:48:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:48:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 16:48:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:48:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:48:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:48:42] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:48:42] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:48:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:48:42] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:48:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:48:42] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:48:42] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectEqual]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:48:42] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:48:42] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:48:42] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:48:42] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:48:42] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af78c87] 
main> [2017-11-22 16:48:42] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:48:42] [selectEqual] [139] [DEBUG] ==>  Preparing: select * from book where 1=1 and bookname = ? and bookid = ?  
main> [2017-11-22 16:48:42] [selectEqual] [139] [DEBUG] ==> Parameters: mysql(String), 2(Integer) 
main> [2017-11-22 16:48:42] [selectEqual] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 16:48:42] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af78c87] 
main> [2017-11-22 16:48:42] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af78c87] 
main> [2017-11-22 16:48:42] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af78c87] 
main> [2017-11-22 16:48:42] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@af78c87] 
main> [2017-11-22 16:48:42] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:48:42] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:48:42] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:48:42] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1704600661, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:48:42] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:01:56] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@66048bfd: startup date [Wed Nov 22 17:01:56 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:01:56] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:01:56] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:01:56] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:01:56] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:01:56] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:01:56] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:01:56] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:01:56] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:01:56] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:01:56] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 17:01:56] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:01:56] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:01:56] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 17:01:56] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 17:01:56] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 17:01:56] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:01:56] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:01:56] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:01:56] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 17:01:56] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:01:56] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:01:56] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:01:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:01:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:01:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:01:56] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:01:56] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:01:56] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@74f6c5d8] 
main> [2017-11-22 17:01:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:01:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 17:01:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:01:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:01:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:01:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:01:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:01:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:01:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:01:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:01:56] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:01:56] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:01:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:01:56] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:01:56] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:01:56] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:01:56] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectEqual]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 17:01:57] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1066615508, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:01:57] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1066615508, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 17:01:57] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1066615508, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:01:57] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:01:57] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10cf09e8] 
main> [2017-11-22 17:01:57] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1066615508, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:01:57] [selectEqual] [139] [DEBUG] ==>  Preparing: select * from book where 1=1 and bookname = ?  
main> [2017-11-22 17:01:57] [selectEqual] [139] [DEBUG] ==> Parameters: mysql(String) 
main> [2017-11-22 17:01:57] [selectEqual] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 17:01:57] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10cf09e8] 
main> [2017-11-22 17:01:57] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10cf09e8] 
main> [2017-11-22 17:01:57] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10cf09e8] 
main> [2017-11-22 17:01:57] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@10cf09e8] 
main> [2017-11-22 17:01:57] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:01:57] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1066615508, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:01:57] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1066615508, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:01:57] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1066615508, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:01:57] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:22:54] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 17:22:54 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:22:54] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:22:54] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:22:54] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:22:54] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:22:54] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:22:54] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:22:54] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:22:54] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:22:54] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:22:54] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 17:22:54] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:22:54] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:22:54] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 17:22:54] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 17:22:54] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 17:22:54] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:22:54] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:22:54] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:22:54] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 17:22:54] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:22:55] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:22:55] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:22:55] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:22:55] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:22:55] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:22:55] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:22:55] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:22:55] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@7a9c84a5] 
main> [2017-11-22 17:22:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 17:22:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:22:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:22:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:22:55] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:22:55] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:22:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:22:55] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:22:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:22:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:22:55] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectLike]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 17:22:55] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:22:55] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 17:22:55] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:22:55] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:22:55] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 17:22:55] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:22:55] [selectLike] [139] [DEBUG] ==>  Preparing: select * from book where 1 = 1 and bookname like ?  
main> [2017-11-22 17:22:55] [selectLike] [139] [DEBUG] ==> Parameters: %op%(String) 
main> [2017-11-22 17:22:55] [selectLike] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 17:22:55] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 17:22:55] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 17:22:55] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 17:22:55] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@8c46918] 
main> [2017-11-22 17:22:55] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:22:55] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:22:55] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:22:55] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [841483227, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:22:55] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:35:07] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 17:35:07 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:35:07] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:35:08] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:35:08] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:35:08] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:35:08] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:35:08] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:35:08] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:35:08] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:35:08] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:35:08] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 17:35:08] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:35:08] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:35:08] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 17:35:08] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 17:35:08] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 17:35:08] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:35:08] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:35:08] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:35:08] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 17:35:08] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:35:08] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:35:08] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:35:08] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:35:08] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:35:08] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:35:08] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:35:08] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:35:08] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 17:35:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:35:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:35:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:35:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 17:35:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:35:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:35:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:35:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:35:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:35:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:35:08] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:35:08] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:35:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:35:08] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:35:08] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:35:08] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:35:09] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insert]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 17:35:09] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1632300236, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:35:09] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1632300236, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:35:09] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:35:09] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@773dab28] 
main> [2017-11-22 17:35:09] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1632300236, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:35:09] [insert] [139] [DEBUG] ==>  Preparing: insert into book (bookname, publisher, year, price, dtm, use_yn, authid) values(?,?,?,?, ?,?,?)  
main> [2017-11-22 17:35:09] [insert] [139] [DEBUG] ==> Parameters: sql(String), yong(String), (String), null, null, null, null 
main> [2017-11-22 17:35:09] [insert] [139] [DEBUG] <==    Updates: 1 
main> [2017-11-22 17:35:09] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@773dab28] 
main> [2017-11-22 17:35:09] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@773dab28] 
main> [2017-11-22 17:35:09] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@773dab28] 
main> [2017-11-22 17:35:09] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@773dab28] 
main> [2017-11-22 17:35:09] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:35:09] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1632300236, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:35:09] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1632300236, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:35:09] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:39:51] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 17:39:51 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:39:51] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:39:51] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:39:51] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:39:51] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:39:51] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:39:51] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:39:51] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:39:51] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:39:51] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:39:51] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 17:39:51] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:39:52] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:39:52] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 17:39:52] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 17:39:52] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 17:39:52] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:39:52] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:39:52] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:39:52] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 17:39:52] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:39:52] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:39:52] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:39:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:39:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:39:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:39:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:39:52] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:39:52] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 17:39:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:39:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 17:39:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:39:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:39:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:39:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:39:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:39:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:39:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:39:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:39:52] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:39:52] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:39:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:39:52] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:39:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:39:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:39:52] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insert]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 17:39:52] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1632300236, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:39:52] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1632300236, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:39:52] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:39:52] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@773dab28] 
main> [2017-11-22 17:39:52] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1632300236, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:39:52] [insert] [139] [DEBUG] ==>  Preparing: insert into book (bookname, publisher, year, price, dtm, use_yn, authid) values(?,?,?,?, ?,?,?)  
main> [2017-11-22 17:39:52] [insert] [139] [DEBUG] ==> Parameters: sql(String), yong(String), (String), null, null, null, null 
main> [2017-11-22 17:39:52] [insert] [139] [DEBUG] <==    Updates: 1 
main> [2017-11-22 17:39:52] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@773dab28] 
main> [2017-11-22 17:39:52] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@773dab28] 
main> [2017-11-22 17:39:52] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@773dab28] 
main> [2017-11-22 17:39:52] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@773dab28] 
main> [2017-11-22 17:39:52] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:39:52] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1632300236, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:39:52] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1632300236, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:39:52] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:41:40] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 17:41:40 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:41:40] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:41:40] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:41:41] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:41:41] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:41:41] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:41:41] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:41:41] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:41:41] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:41:41] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:41:41] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 17:41:41] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:41:41] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:41:41] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 17:41:41] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 17:41:41] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 17:41:41] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:41:41] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:41:41] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:41:41] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 17:41:41] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:41:41] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:41:41] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:41:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:41:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:41:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:41:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:41:41] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:41:41] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 17:41:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:41:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 17:41:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:41:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:41:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:41:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:41:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:41:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:41:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:41:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:41:41] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:41:41] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:41:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:41:41] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:41:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:41:41] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:41:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insert]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 17:41:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:41:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:41:41] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:41:41] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682bd3c4] 
main> [2017-11-22 17:41:41] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:41:41] [insert] [139] [DEBUG] ==>  Preparing: insert into book (bookname, publisher, year, price, dtm, use_yn, authid) values(?,?,?,?, ?,?,?)  
main> [2017-11-22 17:41:41] [insert] [139] [DEBUG] ==> Parameters: sql(String), yong(String), (String), null, null, null, null 
main> [2017-11-22 17:41:41] [insert] [139] [DEBUG] <==    Updates: 1 
main> [2017-11-22 17:41:41] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682bd3c4] 
main> [2017-11-22 17:41:41] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682bd3c4] 
main> [2017-11-22 17:41:41] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682bd3c4] 
main> [2017-11-22 17:41:41] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682bd3c4] 
main> [2017-11-22 17:41:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:41:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:41:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:41:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:51:25] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 17:51:25 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:51:25] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:51:25] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:51:25] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:51:25] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:51:25] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:51:25] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:51:25] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:51:25] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:51:25] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:51:25] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 17:51:25] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:51:25] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:51:25] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 17:51:25] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 17:51:25] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 17:51:25] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:51:25] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:51:25] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:51:25] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 17:51:25] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:51:25] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:51:25] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:51:26] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:51:26] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:51:26] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:51:26] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:51:26] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:51:26] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 17:51:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:51:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 17:51:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:51:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:51:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:51:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:51:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:51:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:51:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:51:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:51:26] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:51:26] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:51:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:51:26] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:51:26] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:51:26] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:51:26] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insertMap]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 17:51:26] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:51:26] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:51:26] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:51:26] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682bd3c4] 
main> [2017-11-22 17:51:26] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:51:26] [insertMap] [139] [DEBUG] ==>  Preparing: isnert into book ( bookname, dtm, authid) values (?,?,?)  
main> [2017-11-22 17:51:26] [insertMap] [139] [DEBUG] ==> Parameters: asdf(String), 2017-01-01(Date), 123(Integer) 
main> [2017-11-22 17:51:26] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682bd3c4] 
main> [2017-11-22 17:51:26] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml] 
main> [2017-11-22 17:51:26] [SQLErrorCodesFactory] [126] [INFO] SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana] 
main> [2017-11-22 17:51:26] [SQLErrorCodesFactory] [199] [DEBUG] Looking up default SQLErrorCodes for DataSource [org.apache.commons.dbcp2.BasicDataSource@25d3cfc8] 
main> [2017-11-22 17:51:26] [SQLErrorCodesFactory] [217] [DEBUG] Database product name cached for DataSource [org.apache.commons.dbcp2.BasicDataSource@25d3cfc8]: name is 'MySQL' 
main> [2017-11-22 17:51:26] [SQLErrorCodesFactory] [175] [DEBUG] SQL error codes for 'MySQL' found 
main> [2017-11-22 17:51:26] [SQLErrorCodeSQLExceptionTranslator] [397] [DEBUG] Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'isnert into book ( bookname,    dtm,   authid)
		          values ('asdf','2017-' at line 1]; SQL was [] for task [
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'isnert into book ( bookname,    dtm,   authid)
		          values ('asdf','2017-' at line 1
### The error may involve mapper.mapperBook.insertMap-Inline
### The error occurred while setting parameters
### SQL: isnert into book ( bookname,    dtm,   authid)             values (?,?,?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'isnert into book ( bookname,    dtm,   authid)
		          values ('asdf','2017-' at line 1
] 
main> [2017-11-22 17:51:26] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682bd3c4] 
main> [2017-11-22 17:51:26] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682bd3c4] 
main> [2017-11-22 17:51:26] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682bd3c4] 
main> [2017-11-22 17:51:26] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:51:26] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:51:26] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:51:26] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:52:19] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 17:52:19 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:52:19] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:52:19] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:52:20] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:52:20] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:52:20] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:52:20] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:52:20] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:52:20] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:52:20] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:52:20] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 17:52:20] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:52:20] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:52:20] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 17:52:20] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 17:52:20] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 17:52:20] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:52:20] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:52:20] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:52:20] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 17:52:20] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:52:20] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:52:20] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:52:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:52:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:52:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:52:20] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:52:20] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:52:20] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 17:52:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:52:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 17:52:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:52:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:52:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:52:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:52:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:52:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:52:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:52:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:52:20] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:52:20] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:52:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:52:20] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:52:20] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:52:20] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:52:32] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 17:52:32 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:52:32] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:52:33] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:52:33] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:52:33] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:52:33] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:52:33] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:52:33] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:52:33] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:52:33] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:52:33] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 17:52:33] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:52:33] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:52:33] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 17:52:33] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 17:52:33] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 17:52:33] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:52:33] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:52:33] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:52:33] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 17:52:33] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:52:33] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:52:33] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:52:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:52:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:52:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:52:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:52:33] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:52:33] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 17:52:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:52:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 17:52:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:52:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:52:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:52:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:52:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:52:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:52:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:52:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:52:33] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:52:33] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:52:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:52:33] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:52:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:52:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:53:07] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insertMap]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 17:53:07] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1360440329, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:53:07] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1360440329, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:53:33] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:53:33] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ecfcbc9] 
main> [2017-11-22 17:53:33] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1360440329, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:53:33] [insertMap] [139] [DEBUG] ==>  Preparing: isnert into book ( bookname, dtm, authid) values (?,?,?)  
main> [2017-11-22 17:53:35] [insertMap] [139] [DEBUG] ==> Parameters: asdf(String), 2017-01-01(Date), 123(Integer) 
main> [2017-11-22 17:53:35] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ecfcbc9] 
main> [2017-11-22 17:53:35] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml] 
main> [2017-11-22 17:53:36] [SQLErrorCodesFactory] [126] [INFO] SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana] 
main> [2017-11-22 17:53:36] [SQLErrorCodesFactory] [199] [DEBUG] Looking up default SQLErrorCodes for DataSource [org.apache.commons.dbcp2.BasicDataSource@74971ed9] 
main> [2017-11-22 17:53:36] [SQLErrorCodesFactory] [217] [DEBUG] Database product name cached for DataSource [org.apache.commons.dbcp2.BasicDataSource@74971ed9]: name is 'MySQL' 
main> [2017-11-22 17:53:36] [SQLErrorCodesFactory] [175] [DEBUG] SQL error codes for 'MySQL' found 
main> [2017-11-22 17:53:36] [SQLErrorCodeSQLExceptionTranslator] [397] [DEBUG] Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'isnert into book ( bookname,    dtm,   authid)
		          values ('asdf','2017-' at line 1]; SQL was [] for task [
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'isnert into book ( bookname,    dtm,   authid)
		          values ('asdf','2017-' at line 1
### The error may involve mapper.mapperBook.insertMap-Inline
### The error occurred while setting parameters
### SQL: isnert into book ( bookname,    dtm,   authid)             values (?,?,?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'isnert into book ( bookname,    dtm,   authid)
		          values ('asdf','2017-' at line 1
] 
main> [2017-11-22 17:54:21] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 17:54:21 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:54:21] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:54:21] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:54:22] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:54:22] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:54:22] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:54:22] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:54:22] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:54:22] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:54:22] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:54:22] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 17:54:22] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:54:22] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:54:22] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 17:54:22] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 17:54:22] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 17:54:22] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:54:22] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:54:22] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:54:22] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 17:54:22] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:54:22] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:54:22] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:54:22] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:54:22] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:54:22] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:54:22] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:54:22] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:54:22] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 17:54:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 17:54:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:54:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:54:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:54:22] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:54:22] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:54:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:54:22] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:54:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:54:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:54:23] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insertMap]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 17:54:23] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:54:23] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:54:31] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:54:31] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682bd3c4] 
main> [2017-11-22 17:54:31] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:54:31] [insertMap] [139] [DEBUG] ==>  Preparing: isnert into book ( bookname, dtm, authid) values (?,?,?)  
main> [2017-11-22 17:54:33] [insertMap] [139] [DEBUG] ==> Parameters: asdf(String), null, 123(Integer) 
main> [2017-11-22 17:54:33] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682bd3c4] 
main> [2017-11-22 17:54:33] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml] 
main> [2017-11-22 17:54:34] [SQLErrorCodesFactory] [126] [INFO] SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana] 
main> [2017-11-22 17:54:34] [SQLErrorCodesFactory] [199] [DEBUG] Looking up default SQLErrorCodes for DataSource [org.apache.commons.dbcp2.BasicDataSource@25d3cfc8] 
main> [2017-11-22 17:54:34] [SQLErrorCodesFactory] [217] [DEBUG] Database product name cached for DataSource [org.apache.commons.dbcp2.BasicDataSource@25d3cfc8]: name is 'MySQL' 
main> [2017-11-22 17:54:34] [SQLErrorCodesFactory] [175] [DEBUG] SQL error codes for 'MySQL' found 
main> [2017-11-22 17:54:34] [SQLErrorCodeSQLExceptionTranslator] [397] [DEBUG] Translating SQLException with SQL state '42000', error code '1064', message [You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'isnert into book ( bookname,    dtm,   authid)
		          values ('asdf',null,1' at line 1]; SQL was [] for task [
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'isnert into book ( bookname,    dtm,   authid)
		          values ('asdf',null,1' at line 1
### The error may involve mapper.mapperBook.insertMap-Inline
### The error occurred while setting parameters
### SQL: isnert into book ( bookname,    dtm,   authid)             values (?,?,?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'isnert into book ( bookname,    dtm,   authid)
		          values ('asdf',null,1' at line 1
] 
main> [2017-11-22 17:55:27] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 17:55:27 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:55:27] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:55:27] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:55:27] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:55:27] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:55:27] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:55:27] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:55:27] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:55:27] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:55:27] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:55:27] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 17:55:27] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:55:27] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:55:27] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 17:55:27] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 17:55:27] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 17:55:27] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:55:27] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:55:27] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:55:27] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 17:55:27] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:55:28] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:55:28] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:55:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:55:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:55:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:55:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:55:28] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:55:28] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 17:55:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:55:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 17:55:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:55:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:55:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:55:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:55:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:55:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:55:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:55:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:55:28] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:55:28] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:55:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:55:28] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:55:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:55:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:55:30] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insertMap]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 17:55:31] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [465839591, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:55:31] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [465839591, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:55:35] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:55:35] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1965539b] 
main> [2017-11-22 17:55:35] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [465839591, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:55:35] [insertMap] [139] [DEBUG] ==>  Preparing: insert into book ( bookname, dtm, authid) values (?,?,?)  
main> [2017-11-22 17:55:35] [insertMap] [139] [DEBUG] ==> Parameters: asdf(String), null, 123(Integer) 
main> [2017-11-22 17:55:35] [insertMap] [139] [DEBUG] <==    Updates: 1 
main> [2017-11-22 17:55:35] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1965539b] 
main> [2017-11-22 17:55:35] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1965539b] 
main> [2017-11-22 17:55:35] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1965539b] 
main> [2017-11-22 17:55:35] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1965539b] 
main> [2017-11-22 17:55:35] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:55:35] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [465839591, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:55:35] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [465839591, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:55:35] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 17:56:54] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 17:56:54 KST 2017]; root of context hierarchy 
main> [2017-11-22 17:56:54] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 17:56:55] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 17:56:55] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 17:56:55] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 17:56:55] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 17:56:55] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 17:56:55] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 17:56:55] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:56:55] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:56:55] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 17:56:55] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 17:56:55] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 17:56:55] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 17:56:55] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 17:56:55] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 17:56:55] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:56:55] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 17:56:55] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 17:56:55] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 17:56:55] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 17:56:55] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 17:56:55] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 17:56:55] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:56:55] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:56:55] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 17:56:55] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 17:56:55] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 17:56:55] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 17:56:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:56:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 17:56:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 17:56:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:56:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:56:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:56:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 17:56:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:56:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:56:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 17:56:55] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 17:56:55] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 17:56:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 17:56:55] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 17:56:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 17:56:55] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 17:56:58] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insertMap]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 17:56:58] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 17:56:58] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 17:57:00] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 17:57:00] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682bd3c4] 
main> [2017-11-22 17:57:00] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 17:57:00] [insertMap] [139] [DEBUG] ==>  Preparing: insert into book ( bookname, dtm, authid) values (?,?,?)  
main> [2017-11-22 17:57:00] [insertMap] [139] [DEBUG] ==> Parameters: asdf(String), 2017-01-01(Date), 123(Integer) 
main> [2017-11-22 17:57:00] [insertMap] [139] [DEBUG] <==    Updates: 1 
main> [2017-11-22 17:57:00] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682bd3c4] 
main> [2017-11-22 17:57:00] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682bd3c4] 
main> [2017-11-22 17:57:00] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682bd3c4] 
main> [2017-11-22 17:57:00] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682bd3c4] 
main> [2017-11-22 17:57:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 17:57:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 17:57:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 17:57:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 18:05:39] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 18:05:39 KST 2017]; root of context hierarchy 
main> [2017-11-22 18:05:39] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 18:05:39] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 18:05:39] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 18:05:39] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 18:05:39] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 18:05:39] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 18:05:39] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 18:05:39] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:05:39] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:05:39] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 18:05:39] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 18:05:39] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:05:39] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 18:05:39] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 18:05:39] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 18:05:39] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:05:39] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:05:39] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 18:05:39] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 18:05:39] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 18:05:39] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 18:05:39] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 18:05:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:05:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:05:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:05:40] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 18:05:40] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 18:05:40] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 18:05:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 18:05:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 18:05:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 18:05:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:40] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 18:05:40] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 18:05:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 18:05:40] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 18:05:40] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 18:05:40] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 18:05:40] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.updateBook]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 18:05:40] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1360440329, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 18:05:40] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1360440329, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 18:05:40] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 18:05:40] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ecfcbc9] 
main> [2017-11-22 18:05:40] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1360440329, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 18:05:40] [updateBook] [139] [DEBUG] ==>  Preparing: update book set bookname = ? , publisher = ? , year = ? , price = ? , dtm = ? , use_yn = ? , authid = ? where 1 = 1 and bookid = ? and bookname = ?  
main> [2017-11-22 18:05:40] [updateBook] [139] [DEBUG] ==> Parameters: (String), (String), (String), 120000(Integer), null, null, 50(Integer), 5(Integer), sql(String) 
main> [2017-11-22 18:05:40] [updateBook] [139] [DEBUG] <==    Updates: 1 
main> [2017-11-22 18:05:40] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ecfcbc9] 
main> [2017-11-22 18:05:40] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ecfcbc9] 
main> [2017-11-22 18:05:40] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ecfcbc9] 
main> [2017-11-22 18:05:40] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ecfcbc9] 
main> [2017-11-22 18:05:40] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 18:05:40] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1360440329, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 18:05:40] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1360440329, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 18:05:40] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 18:07:10] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 18:07:10 KST 2017]; root of context hierarchy 
main> [2017-11-22 18:07:10] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 18:07:10] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 18:07:11] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 18:07:11] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 18:07:11] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 18:07:11] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 18:07:11] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 18:07:11] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:07:11] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:07:11] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 18:07:11] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 18:07:11] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:07:11] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 18:07:11] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 18:07:11] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 18:07:11] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:07:11] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:07:11] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 18:07:11] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 18:07:11] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 18:07:11] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 18:07:11] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 18:07:11] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:07:11] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:07:11] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:07:11] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 18:07:11] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 18:07:11] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 18:07:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:07:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 18:07:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 18:07:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:07:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:07:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:07:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 18:07:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:07:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:07:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:07:11] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 18:07:11] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 18:07:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 18:07:11] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 18:07:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 18:07:11] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 18:07:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.updateBook]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 18:07:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 18:07:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 18:07:11] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 18:07:11] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682bd3c4] 
main> [2017-11-22 18:07:11] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 18:07:11] [updateBook] [139] [DEBUG] ==>  Preparing: update book set bookname = ? , publisher = ? , year = ? , price = ? , dtm = ? , use_yn = ? , authid = ? where 1 = 1 and bookid = ? and bookname = ?  
main> [2017-11-22 18:07:11] [updateBook] [139] [DEBUG] ==> Parameters: (String), (String), (String), 120000(Integer), null, null, 50(Integer), 5(Integer), sql(String) 
main> [2017-11-22 18:07:11] [updateBook] [139] [DEBUG] <==    Updates: 0 
main> [2017-11-22 18:07:11] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682bd3c4] 
main> [2017-11-22 18:07:11] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682bd3c4] 
main> [2017-11-22 18:07:11] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682bd3c4] 
main> [2017-11-22 18:07:11] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@682bd3c4] 
main> [2017-11-22 18:07:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 18:07:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 18:07:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [982634822, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 18:07:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 18:10:23] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 18:10:23 KST 2017]; root of context hierarchy 
main> [2017-11-22 18:10:23] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 18:10:23] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 18:10:23] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 18:10:23] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 18:10:23] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 18:10:23] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 18:10:23] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 18:10:23] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:10:23] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:10:23] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 18:10:23] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 18:10:23] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:10:23] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 18:10:23] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 18:10:23] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 18:10:24] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:10:24] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:10:24] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 18:10:24] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 18:10:24] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 18:10:24] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 18:10:24] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 18:10:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:10:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:10:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:10:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 18:10:24] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 18:10:24] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 18:10:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 18:10:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 18:10:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 18:10:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:24] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 18:10:24] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 18:10:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 18:10:24] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 18:10:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:10:24] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 18:10:24] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.deleteBook]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 18:10:24] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [465839591, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 18:10:24] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [465839591, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 18:10:24] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 18:10:24] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1965539b] 
main> [2017-11-22 18:10:24] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [465839591, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 18:10:24] [deleteBook] [139] [DEBUG] ==>  Preparing: delete from book where 1 = 1 and bookid = ?  
main> [2017-11-22 18:10:24] [deleteBook] [139] [DEBUG] ==> Parameters: 5(Integer) 
main> [2017-11-22 18:10:24] [deleteBook] [139] [DEBUG] <==    Updates: 1 
main> [2017-11-22 18:10:24] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1965539b] 
main> [2017-11-22 18:10:24] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1965539b] 
main> [2017-11-22 18:10:24] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1965539b] 
main> [2017-11-22 18:10:24] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1965539b] 
main> [2017-11-22 18:10:24] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 18:10:24] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [465839591, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 18:10:24] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [465839591, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 18:10:24] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 18:10:45] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 18:10:45 KST 2017]; root of context hierarchy 
main> [2017-11-22 18:10:45] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 18:10:46] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 18:10:46] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 18:10:46] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 18:10:46] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 18:10:46] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 18:10:46] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 18:10:46] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:10:46] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:10:46] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 18:10:46] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 18:10:46] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:10:46] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 18:10:46] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 18:10:46] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 18:10:46] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:10:46] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:10:46] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 18:10:46] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 18:10:46] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 18:10:46] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 18:10:46] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 18:10:46] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:10:46] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:10:46] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:10:46] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 18:10:46] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 18:10:46] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 18:10:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 18:10:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 18:10:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 18:10:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:10:46] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 18:10:46] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 18:10:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 18:10:46] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 18:10:46] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:10:46] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 18:10:46] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.deleteBook]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 18:10:47] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1360440329, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 18:10:47] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1360440329, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 18:10:47] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 18:10:47] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ecfcbc9] 
main> [2017-11-22 18:10:47] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1360440329, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 18:10:47] [deleteBook] [139] [DEBUG] ==>  Preparing: delete from book where 1 = 1 and bookid = ?  
main> [2017-11-22 18:10:47] [deleteBook] [139] [DEBUG] ==> Parameters: 6(Integer) 
main> [2017-11-22 18:10:47] [deleteBook] [139] [DEBUG] <==    Updates: 1 
main> [2017-11-22 18:10:47] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ecfcbc9] 
main> [2017-11-22 18:10:47] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ecfcbc9] 
main> [2017-11-22 18:10:47] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ecfcbc9] 
main> [2017-11-22 18:10:47] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1ecfcbc9] 
main> [2017-11-22 18:10:47] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 18:10:47] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1360440329, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 18:10:47] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1360440329, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 18:10:47] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 18:11:04] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@52e677af: startup date [Wed Nov 22 18:11:04 KST 2017]; root of context hierarchy 
main> [2017-11-22 18:11:04] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 18:11:04] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 18:11:05] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 18:11:05] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 18:11:05] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 18:11:05] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 18:11:05] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 18:11:05] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:11:05] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:11:05] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 18:11:05] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 18:11:05] [ResolverUtil] [103] [DEBUG] Listing file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:11:05] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 18:11:05] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 18:11:05] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 =  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth toString ! java/lang/StringBuilder # ModelAuth [authid= 
main> [2017-11-22 18:11:05] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:11:05] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/worksapce2/Lecture/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:11:05] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 f  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Ljava/lang/Boolean; authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 18:11:05] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 18:11:05] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 18:11:05] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 18:11:05] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 18:11:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:11:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:11:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:11:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 18:11:05] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 18:11:05] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 18:11:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insert(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:11:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount() throws java.lang.Exception 
main> [2017-11-22 18:11:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 18:11:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:11:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:11:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:11:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) throws java.lang.Exception 
main> [2017-11-22 18:11:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:11:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:11:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:11:05] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 18:11:05] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 18:11:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 18:11:05] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 18:11:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 18:11:05] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 18:11:05] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.deleteBook]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 18:11:05] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1199833406, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 18:11:05] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1199833406, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 18:11:05] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 18:11:05] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f2e4acf] 
main> [2017-11-22 18:11:05] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1199833406, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 18:11:05] [deleteBook] [139] [DEBUG] ==>  Preparing: delete from book where 1 = 1 and bookid = ?  
main> [2017-11-22 18:11:05] [deleteBook] [139] [DEBUG] ==> Parameters: 9(Integer) 
main> [2017-11-22 18:11:05] [deleteBook] [139] [DEBUG] <==    Updates: 1 
main> [2017-11-22 18:11:05] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f2e4acf] 
main> [2017-11-22 18:11:05] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f2e4acf] 
main> [2017-11-22 18:11:05] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f2e4acf] 
main> [2017-11-22 18:11:05] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@f2e4acf] 
main> [2017-11-22 18:11:05] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 18:11:05] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1199833406, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 18:11:05] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1199833406, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 18:11:05] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
